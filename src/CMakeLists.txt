cmake_minimum_required(VERSION 2.6)

if(MSVC AND CMAKE_CXX_COMPILER_VERSION VERSION_GREATER 17)
    # from Visual Studio 2012, C++11 is supported
else()
    # check c++11 for GCC/Clang from http://www.guyrutenberg.com/2014/01/05/enabling-c11-c0x-in-cmake/
    include(CheckCXXCompilerFlag)
    CHECK_CXX_COMPILER_FLAG("-std=c++11" COMPILER_SUPPORTS_CXX11)
    if(COMPILER_SUPPORTS_CXX11)
        set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
    else()
        message(FATAL_ERROR "The compiler ${CMAKE_CXX_COMPILER} has no C++11 support. Please use a different C++ compiler.")
    endif()
endif()

if(MSVC)
    add_definitions(/W3 /wd4819) # disable warning generated by giving non-ANSI gtk header
else()
    add_definitions(-Wall)

    # Uncomment the following lines to enable gprof support in debug build
    # set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -pg")
    # set(CMAKE_EXE_LINKER_FLAGS_DEBUG "${CMAKE_EXE_LINKER_FLAGS_DEBUG} -pg")
endif()

if(${CMAKE_CXX_COMPILER_ID} STREQUAL "Clang")
    add_definitions(-Wno-deprecated-register) 
    if(WIN32)
        add_definitions(-Wno-incompatible-ms-struct)
    endif()
endif()

# specify output path
# from http://stackoverflow.com/a/6595001
set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/lib)
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)

set(LIB_SOURCE_FILES
    yage.cc
    window/message.cc
    window/window.cc
    util/runner.cc
    audio/player.cc
    dialog/message_dlg.cc
    dialog/file_chooser_dlg.cc
    dialog/color_chooser_dlg.cc
    dialog/font_chooser_dlg.cc
    dialog/input_dlg.cc
    draw/point.cc
    draw/color.cc
    draw/line.cc
    draw/shape_property.cc
    draw/base_elliptic_arc.cc
    draw/elliptic_arc.cc
    draw/elliptic_sector.cc
    draw/ellipse.cc
    draw/circle.cc
    draw/rect.cc
    draw/canvas.cc
    draw/font.cc
    draw/text.cc
	draw/paint.cc
    api/bgi.cc
    )

if(WIN32)
    list(APPEND LIB_SOURCE_FILES util/mswin.cc audio/mswin.cc)
elseif(APPLE)
    list(APPEND LIB_SOURCE_FILES audio/osx.mm)
elseif(UNIX)
    list(APPEND LIB_SOURCE_FILES audio/unix.cc)
endif()

if(APPLE)
    find_library(FOUNDATION_LIBRARY Foundation)
    find_library(AVFOUNDATION_LIBRARY AVFoundation)
    find_library(COREMEDIA_LIBRARY CoreMedia)
    set_source_files_properties(${LIB_SOURCE_FILES} PROPERTIES COMPILE_FLAGS "-x objective-c++")
elseif(UNIX)
    FIND_PACKAGE(PkgConfig REQUIRED)
    PKG_CHECK_MODULES(GSTREAMER REQUIRED gstreamer-0.10)
    INCLUDE_DIRECTORIES(${GSTREAMER_INCLUDE_DIRS})
    ADD_DEFINITIONS(${GSTREAMER_CFLAGS_OTHER})
endif()

add_library(yage STATIC ${LIB_SOURCE_FILES})

# CMake x GTK from https://gist.github.com/fracek/3323924
# Use the package PkgConfig to detect GTK+ headers/library files
FIND_PACKAGE(PkgConfig REQUIRED)
PKG_CHECK_MODULES(GTK3 REQUIRED gtk+-3.0)

# Setup CMake to use GTK+, tell the compiler where to look for headers
# and to the linker where to look for libraries
INCLUDE_DIRECTORIES(${GTK3_INCLUDE_DIRS})
LINK_DIRECTORIES(${GTK3_LIBRARY_DIRS})

# Add other flags to the compiler
if (MSVC)
    # pkg-config generates a flag that is not applicable on MSVC: -mms-bitfields
else()
    ADD_DEFINITIONS(${GTK3_CFLAGS_OTHER})
endif()

# install library and headers
install(TARGETS yage DESTINATION "lib")
install(FILES "../include/graphics.h" DESTINATION "include")

add_executable(yagetest
test/test.cc
test/audio.cc
test/dialog.cc
test/draw.cc
test/fix_size.cc
test/msg.cc
test/resize.cc
test/window_count.cc
test/draw_perf.cc
)

target_link_libraries(yagetest yage)

if (APPLE)
    target_link_libraries(yagetest ${FOUNDATION_LIBRARY} ${AVFOUNDATION_LIBRARY} ${COREMEDIA_LIBRARY})
elseif(UNIX)
    target_link_libraries(yagetest ${GSTREAMER_LIBRARIES})
endif()

if (MSVC) # library required by MSVC is pretty different than others
    target_link_libraries(yagetest "atk-1.0.lib" "cairo.lib" "fontconfig.lib" "gailutil.lib" "gdk-win32-3.0.lib" "gdk_pixbuf-2.0.lib" "gio-2.0.lib" "glib-2.0.lib" "gmodule-2.0.lib" "gobject-2.0.lib" "gthread-2.0.lib" "gtk-win32-3.0.lib" "pango-1.0.lib" "pangocairo-1.0.lib" "pangoft2-1.0.lib" "pangowin32-1.0.lib")
else()
    target_link_libraries(yagetest ${GTK3_LIBRARIES})
endif()

